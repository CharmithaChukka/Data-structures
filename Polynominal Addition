/*program to represent polynomials and addition of two polynomials*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
int coeff,expo;
struct node *next;
};
struct node *head1=NULL;
struct node *head2=NULL;
struct node *head3=NULL;
struct node *create(struct node *head);
struct node *insert(struct node *head,int co,int ex);
void polyadd(struct node *p1,struct node *p2);
void display();
void main()
{
printf("enter first polynomial\n");
head1=create(head1);
printf("enter second polynomial\n");
head2=create(head2);
polyadd(head1,head2);
display();
}
struct node *create(struct node *head)
{
int n,i,coef,expo;
printf("enter number of terms\n");
scanf("%d",&n);
for(i=0;i<n;i++)
{
printf("enter coefficient for term %d", i+1);
scanf("%d",&coef);
printf("enter exponent for term %d",i+1);
scanf("%d",&expo);
head=insert(head,coef,expo);
}
return head;
}
struct node *insert(struct node *head,int co,int ex)
{
struct node *newnode,*p;
newnode=(struct node *)malloc(sizeof(struct node));
newnode->coeff=co;
newnode->expo=ex;

newnode->next=NULL;
if(head==NULL||ex>head->expo)
{
newnode->next=head;
head=newnode;
}
else
{
p=head;
while(p->next!=NULL)
p=p->next;
p->next=newnode;
}
return head;
}
void polyadd(struct node *p1,struct node *p2)
{
while(p1!=NULL&&p2!=NULL)
{
if(p1->expo==p2->expo)
{
head3=insert(head3,p1->coeff+p2->coeff,p1->expo);
p1=p1->next;
p2=p2->next;
}
else if(p1->expo>p2->expo)
{
head3=insert(head3,p1->coeff,p1->expo);
p1=p1->next;
}
else
{
head3=insert(head3,p2->coeff,p2->expo);
p2=p2->next;
}
}
while(p1!=NULL)
{
head3=insert(head3,p1->coeff,p1->expo);
p1=p1->next;
}
while(p2!=NULL)
{
head3=insert(head3,p2->coeff,p2->expo);
p2=p2->next;
}
}

void display()
{
struct node *p;
p=head3;
if(p==NULL)
printf("No polylnomial");
else
{
while(p!=NULL)
{
printf("%dx^%d",p->coeff,p->expo);
p=p->next;
if(p!=NULL)
printf("+");
else
printf("\n");
}
}
}
