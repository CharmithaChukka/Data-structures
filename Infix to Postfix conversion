/*Program to convert infix expression into postfix expression*/
#include<stdio.h>
#include<ctype.h>
#define MAX 20
void push(char ele);
char pop();
int isoperator(char ch);
int precedence(char ch);
char stack[MAX];
int top=-1;
void main()
{
char infix[20],postfix[20],ch,ele;
int i=0,j=0;
printf("enter infix expression");
scanf("%s",infix);
while((ch=infix[i++])!='\0')
{
if(isalnum(ch))
postfix[j++]=ch;
else if(ch=='(')
push(ch);
else if(ch==')')
{
while(stack[top]!='(')
{
postfix[j++]=pop();
}
ele=pop();
}
else if(isoperator(ch))
{
if(top==-1||stack[top]=='(')
push(ch);
else
{
while(precedence(ch)<=precedence(stack[top]))
{
postfix[j++]=pop();
}
push(ch);
}
}

}
while(top!=-1)
{
postfix[j++]=pop();
}
postfix[j]='\0';
printf("Postfix expression is %s",postfix);
}
void push(char ele)
{
if(top==MAX-1)
printf("OVERFLOW");
else
{
top=top+1;
stack[top]=ele;
}
}
char pop()
{
return stack[top--];
}
int isoperator(char ch)
{
if(ch=='+'||ch=='-'||ch=='*'||ch=='/')
return 1;
else
return 0;
}
int precedence(char ch)
{
if(ch=='+'||ch=='-')
return 1;
else if(ch=='*'||ch=='/')
return 2;
else
return 0;
}
